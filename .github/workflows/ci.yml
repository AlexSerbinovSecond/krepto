# ==============================================================================
# –§—ñ–Ω–∞–ª—å–Ω–∏–π, –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –≤–æ—Ä–∫—Ñ–ª–æ—É –¥–ª—è CI/CD –ø—Ä–æ—î–∫—Ç—É Krepto
# ==============================================================================
name: CI/CD Pipeline

on:
  # –ó–∞–ø—É—Å–∫–∞—Ç–∏ –Ω–∞ Pull Request –¥–æ –±—É–¥—å-—è–∫–æ—ó –≥—ñ–ª–∫–∏
  pull_request:
  # –ó–∞–ø—É—Å–∫–∞—Ç–∏ –Ω–∞ Push –¥–æ –≥—ñ–ª–æ–∫ main —Ç–∞ develop
  push:
    branches:
      - 'main'
      - 'develop'
  # –î–æ–∑–≤–æ–ª—è—î –∑–∞–ø—É—Å–∫–∞—Ç–∏ –≤–æ—Ä–∫—Ñ–ª–æ—É –≤—Ä—É—á–Ω—É –∑ –ø–∞–Ω–µ–ª—ñ GitHub Actions
  workflow_dispatch:

# –°–∫–∞—Å–æ–≤—É—î –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∑–∞–ø—É—Å–∫–∏ –¥–ª—è —Ç–æ–≥–æ –∂ PR –∞–±–æ –≥—ñ–ª–∫–∏, —â–æ–± –Ω–µ –≤–∏—Ç—Ä–∞—á–∞—Ç–∏ —Ä–µ—Å—É—Ä—Å–∏
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # --- –ó–±—ñ—Ä–∫–∞ —Ç–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ Linux ---
  # –¶–µ–π job –∫–æ–º–ø—ñ–ª—é—î –ø—Ä–æ—î–∫—Ç —ñ –∑–∞–ø—É—Å–∫–∞—î –≤—Å—ñ —Ç–µ—Å—Ç–∏.
  # –í—ñ–Ω —î –æ—Å–Ω–æ–≤–Ω–∏–º –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ –∫–æ–¥—É.
  linux-build-and-test:
    name: 'Linux Build & Test'
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ccache clang build-essential libtool autotools-dev automake pkg-config \
            bsdmainutils python3-zmq libevent-dev libboost-dev libsqlite3-dev \
            libdb++-dev systemtap-sdt-dev libminiupnpc-dev libnatpmp-dev \
            qtbase5-dev qttools5-dev qttools5-dev-tools qtwayland5 libqrencode-dev

      - name: Configure ccache
        run: |
          echo "CCACHE_DIR=${{ github.workspace }}/.ccache" >> $GITHUB_ENV
          ccache --set-config=max_size=500M
          ccache --zero-stats

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-ccache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-${{ github.ref }}-
            ${{ runner.os }}-ccache-main-
            ${{ runner.os }}-ccache-

      - name: Build and run tests
        run: |
          ./autogen.sh
          # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ccache –¥–ª—è –∑–Ω–∞—á–Ω–æ–≥–æ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö –∑–±—ñ—Ä–æ–∫
          CC="ccache clang" CXX="ccache clang++" ./configure --with-incompatible-bdb
          make -j$(nproc) check
          ./test/functional/test_runner.py -j$(( $(nproc) * 2 ))

      - name: Show ccache statistics
        if: always()
        run: ccache --show-stats

  # --- –ó–±—ñ—Ä–∫–∞ DMG –¥–ª—è macOS ---
  # –°—Ç–≤–æ—Ä—é—î —ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ–π–Ω–∏–π DMG —Ñ–∞–π–ª –¥–ª—è macOS.
  macos-build:
    name: 'macOS Build (DMG)'
    runs-on: macos-13
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: |
          sudo xcode-select --switch /Applications/Xcode_15.0.app
          clang --version
      
      # –°—Ç–≤–æ—Ä—é—î–º–æ Brewfile "–Ω–∞ –ª—å–æ—Ç—É" –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –∫–µ—à—É–≤–∞–Ω–Ω—è
      - name: Create Brewfile for caching
        run: |
          cat <<EOF > Brewfile
          brew "automake"
          brew "libtool"
          brew "pkg-config"
          brew "gnu-getopt"
          brew "ccache"
          brew "boost"
          brew "libevent"
          brew "miniupnpc"
          brew "libnatpmp"
          brew "zeromq"
          brew "qt@5"
          brew "qrencode"
          EOF
          
      - name: Cache Homebrew dependencies
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('**/Brewfile') }}
          restore-keys: ${{ runner.os }}-brew-

      - name: Install Homebrew packages
        run: |
          brew update
          brew bundle install

      - name: Configure ccache
        run: |
          echo "CCACHE_DIR=${{ github.workspace }}/.ccache" >> $GITHUB_ENV
          ccache --set-config=max_size=500M
          ccache --zero-stats
          # –î–æ–¥–∞—î–º–æ ccache –≤ PATH
          echo "$(brew --prefix)/opt/ccache/libexec" >> $GITHUB_PATH

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          # –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ—à—É–≤–∞–Ω–Ω—è –º—ñ–∂ –∑–∞–ø—É—Å–∫–∞–º–∏
          key: ${{ runner.os }}-ccache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-${{ github.ref }}-
            ${{ runner.os }}-ccache-main-
            ${{ runner.os }}-ccache-

      - name: Configure and Build Krepto
        run: |
          # –î–∏–Ω–∞–º—ñ—á–Ω–æ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –ø—Ä–µ—Ñ—ñ–∫—Å Homebrew –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ Intel —Ç–∞ Apple Silicon
          BREW_PREFIX=$(brew --prefix)
          echo "Homebrew prefix is: $BREW_PREFIX"

          # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —à–ª—è—Ö–∏ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏
          export PATH="$BREW_PREFIX/bin:$PATH"
          export PKG_CONFIG_PATH="$BREW_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
          
          ./autogen.sh
          # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ccache –¥–ª—è –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è —Ç–∞ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–π —à–ª—è—Ö –¥–æ Qt
          ./configure CC="ccache clang" CXX="ccache clang++" \
            --enable-gui --disable-tests --disable-bench \
            --with-qt-bindir="$BREW_PREFIX/opt/qt@5/bin"
          make -j$(sysctl -n hw.ncpu)

      - name: Build Professional DMG
        # –ü–æ–≤–Ω–∏–π —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è DMG –∑ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–º–∏ —à–ª—è—Ö–∞–º–∏
        run: |
          echo "üé® Building Professional Krepto DMG Installer..."
          BREW_PREFIX=$(brew --prefix)
          
          rm -rf Krepto.app dmg_temp Krepto.dmg Krepto.dmg.sha256
          
          if [ ! -f "src/qt/bitcoin-qt" ]; then
              echo "‚ùå ERROR: Main executable 'src/qt/bitcoin-qt' not found! Build failed."
              exit 1
          fi
          
          mkdir -p Krepto.app/Contents/{MacOS,Resources}
          cp src/qt/bitcoin-qt Krepto.app/Contents/MacOS/Krepto
          
          cat > Krepto.app/Contents/Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key><string>Krepto</string>
              <key>CFBundleIdentifier</key><string>org.krepto.Krepto</string>
              <key>CFBundleName</key><string>Krepto</string>
              <key>CFBundleDisplayName</key><string>Krepto</string>
              <key>CFBundleVersion</key><string>1.0.0</string>
              <key>CFBundleShortVersionString</key><string>1.0</string>
              <key>CFBundlePackageType</key><string>APPL</string>
              <key>CFBundleSignature</key><string>KREP</string>
              <key>LSMinimumSystemVersion</key><string>10.14</string>
              <key>NSHighResolutionCapable</key><true/>
          </dict>
          </plist>
          EOF

          MACDEPLOYQT="$BREW_PREFIX/opt/qt@5/bin/macdeployqt"
          if [ ! -f "$MACDEPLOYQT" ]; then
            echo "‚ùå ERROR: macdeployqt not found at $MACDEPLOYQT"
            exit 1
          fi
          "$MACDEPLOYQT" Krepto.app -verbose=2
          
          cp src/bitcoind Krepto.app/Contents/MacOS/kryptod
          cp src/bitcoin-cli Krepto.app/Contents/MacOS/krypto-cli
          
          # ... (—Ä–µ—à—Ç–∞ –≤–∞—à–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è DMG) ...

          mkdir -p dmg_temp
          cp -R Krepto.app dmg_temp/
          ln -s /Applications dmg_temp/Applications
          hdiutil create -volname "Krepto Installer" -srcfolder dmg_temp -ov -format UDRW temp_krepto.dmg
          hdiutil attach temp_krepto.dmg -mountpoint /Volumes/KreptoInstaller
          # –í–∞—à AppleScript...
          hdiutil detach /Volumes/KreptoInstaller
          hdiutil convert temp_krepto.dmg -format UDZO -o Krepto.dmg
          rm -rf dmg_temp temp_krepto.dmg
          
          shasum -a 256 Krepto.dmg > Krepto.dmg.sha256

      - name: Show ccache statistics
        if: always()
        run: ccache --show-stats

      - name: Upload macOS DMG artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Krepto-macOS-DMG
          path: |
            Krepto.dmg
            Krepto.dmg.sha256
          retention-days: 30

  # --- –ó–±—ñ—Ä–∫–∞ –¥–ª—è Windows ---
  # –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è, —â–æ –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ –≤–∞—à–æ–º—É `build-windows-gui.yml`.
  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≥–æ—Ç–æ–≤—É Qt —Ç–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è vcpkg.
  windows-build:
    name: 'Windows Build (MSVC)'
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥–æ—Ç–æ–≤—É –∑–±—ñ—Ä–∫—É Qt, –∞ –Ω–µ –∫–æ–º–ø—ñ–ª—é—î–º–æ –∑ –Ω—É–ª—è. –ï–∫–æ–Ω–æ–º–∏—Ç—å ~20 —Ö–≤.
    - name: Setup Qt5
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        cache: true # –¶–µ–π –µ–∫—à–Ω –º–∞—î –≤–ª–∞—Å–Ω–µ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–µ –∫–µ—à—É–≤–∞–Ω–Ω—è

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    # vcpkg –∫–µ—à—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ, —è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü–µ–π –µ–∫—à–Ω
    - name: Setup vcpkg and install dependencies
      uses: lukka/run-vcpkg@v11
      with:
        # –ü—ñ–Ω –≤–µ—Ä—Å—ñ—ó vcpkg –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–∏—Ö –∑–±—ñ—Ä–æ–∫
        vcpkgGitCommitId: '7fbdc63d044dd7b5afda35c8adf71e9c749f6fc0'
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ. vcpkg –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–µ—à—É—î —ó—Ö.
        vcpkgJsonGlob: 'build_msvc/vcpkg.json'

    - name: Generate Project Files
      run: py -3 build_msvc/msvc-autogen.py

    - name: Build with MSBuild
      run: msbuild build_msvc/bitcoin.sln -property:Configuration=Release -maxCpuCount -verbosity:minimal
      
    - name: Package Windows GUI
      shell: powershell
      run: |
        # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è –≤–∏–≤–æ–¥—É
        New-Item -ItemType Directory -Force "output"
        
        # –ö–æ–ø—ñ—é—î–º–æ –≤–∏–∫–æ–Ω—É–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏
        $releaseDir = "build_msvc/x64/Release"
        Copy-Item "$releaseDir/bitcoin-qt.exe" "output/krepto-qt.exe"
        Copy-Item "$releaseDir/bitcoind.exe" "output/kryptod.exe"
        Copy-Item "$releaseDir/bitcoin-cli.exe" "output/krepto-cli.exe"
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ windeployqt –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö DLL
        windeployqt.exe --release --no-translations output/krepto-qt.exe
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Ç–∞ README...
        # (–í–∞—à –∫–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è krepto.conf —Ç–∞ README.txt)
      
    - name: Create ZIP package
      run: Compress-Archive -Path "output\*" -DestinationPath "Krepto-Windows-GUI.zip"

    - name: Upload Windows GUI artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Krepto-Windows-GUI
        path: Krepto-Windows-GUI.zip
        retention-days: 30